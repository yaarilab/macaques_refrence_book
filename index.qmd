---
title: "rm ig allele browser"
execute:
  echo: false
  warning: false
  message: false
format: html
---

### 

| [**IGH**](IGH.html)                                     | [**IGL**](IGL.html)                                     | [**IGK**](IGK.html)                                     |
|------------------------|------------------------|------------------------|
| [Allele table](IGH.html#allele-table)                   | [Allele table](IGL.html#allele-table)                   | [Allele table](IGK.html#allele-table)                   |
| [Allele visual Summary](IGH.html#Allele-visual-summary) | [Allele visual summary](IGL.html#Allele-visual-summary) | [Allele visual summary](IGK.html#Allele-visual-summary) |

```{r}
source("functions.R")
library(dplyr)
library(plotly)
library(gridExtra)
  
```

```{r}
# Define the source columns
source_columns <- c("genbank", "kimdb", "rhgldb+", "imgt", "trios", "vrc", "guo")

# Create the `source` column in data.table
bag_data[, source := apply(.SD, 1, function(row) {
  paste0(
    unlist(
      mapply(function(col_name, value) {
        if (value != "") paste(col_name, ": ", value) else NULL
      }, names(row), row)
    ), 
    collapse = ", "
  )
}), .SDcols = source_columns]

```

```{r}
library(dplyr)

# Create new columns without renaming the existing ones
bag_data <- bag_data %>%
  mutate(
    nonamer_3 = apply(select(., c("v_nonamer", "d_3_nonamer")), 1, function(x) {
      x <- x[x != "" & !is.na(x)]  # Exclude empty strings and NA
      if (length(x) > 0) x[1] else NA
    }),
    heptamer_3 = apply(select(., c("v_heptamer", "d_3_heptamer")), 1, function(x) {
      x <- x[x != "" & !is.na(x)]  # Exclude empty strings and NA
      if (length(x) > 0) x[1] else NA
    }),
    nonamer_5 = apply(select(., c("j_nonamer", "d_5_nonamer")), 1, function(x) {
      x <- x[x != "" & !is.na(x)]  # Exclude empty strings and NA
      if (length(x) > 0) x[1] else NA
    }),
    heptamer_5 = apply(select(., c("j_heptamer", "d_5_heptamer")), 1, function(x) {
      x <- x[x != "" & !is.na(x)]  # Exclude empty strings and NA
      if (length(x) > 0) x[1] else NA
    })
  )

```

```{r}
library(DT)

bag_data <- bag_data %>%
  select(
    chain, gene_type, ASC, allele, seq, seq_gapped,
    heptamer_3, nonamer_3, heptamer_5, nonamer_5,
    spacer_3, spacer_5, Family,iglabel,source, l_part1,l_part2,samples_genomic,samples_AIRRseq
  ) %>%
  group_by(chain, gene_type, ASC, allele, seq, seq_gapped, Family) %>%
  summarize(
    diffrent_rss = n(),
    heptamer_3 = paste(heptamer_3, collapse = ","),
    nonamer_3 = paste(nonamer_3, collapse = ","),
    heptamer_5 = paste(heptamer_5, collapse = ","),
    nonamer_5 = paste(nonamer_5, collapse = ","),
    spacer_3 = paste(spacer_3, collapse = ","),
    spacer_5 = paste(spacer_5, collapse = ","),
    sample_count_genomic = length(unique(unlist(strsplit(samples_genomic, ", ")))),
    sample_count_AIRRseq = length(unique(unlist(strsplit(samples_AIRRseq, ", ")))),
     iglabel = paste0(unique(iglabel), collapse = ", "),
     source =  paste0(unique(source), collapse = ", "),
     l_part1 = paste0(unique(l_part1), collapse = ", "),
      l_part2 = paste0(unique(l_part2), collapse = ", "),
    .groups = "drop" # Ensures the result is not grouped after summarizing
  )%>%
  select(
    chain, gene_type, ASC, allele, seq, seq_gapped,
    heptamer_3, nonamer_3, heptamer_5, nonamer_5,
    spacer_3, spacer_5, sample_count_genomic, sample_count_AIRRseq, Family, diffrent_rss, iglabel,source,l_part1,l_part2
  )

# Create the table with all columns, but hide additional ones
DT::datatable(
  bag_data, # Include all columns
  options = list(
    dom = 'Bfrtip',
    buttons = c('copy', 'csv', 'excel', 'pdf', 'print'),
    columnDefs = list(
      list(visible = FALSE, targets = c(6:20)) # Hide all columns except the first four
    )
  ),
  callback = JS(
    "
    table.on('click', 'tr', function() {
      var tr = $(this); // Get the clicked row
      var rowData = table.row(this).data(); // Get all data for the clicked row
      if (tr.next().hasClass('detail-row')) {
        // If details row already exists, remove it
        tr.next().remove();
      } else {
        // Construct detailed information using all columns
        var details = '<tr class=\"detail-row\"><td colspan=\"4\">' +
          '<strong>Chain:</strong> ' + rowData[1] + '<br>' +
          '<strong>Gene Type:</strong> ' + rowData[2] + '<br>' +
          '<strong>ASC:</strong> ' + rowData[3] + '<br>' +
          '<strong>Allele:</strong> ' + rowData[4] + '<br>' +
          '<strong>Ig lable:</strong> ' + rowData[17] + '<br>' +
           '<strong>Appears also at:</strong> ' + rowData[18] + '<br>' +
          '<strong>Number of combinations:</strong> ' + rowData[16] + '<br>' +
          '<strong>Seq:</strong> ' + rowData[5] + '<br>'

       if (rowData[2].includes('V')) {
         details += '<strong>Seq Gapped:</strong> ' + rowData[6] + '<br>';
       } 

      // Include Heptamer/Nonamer and Spacer based on Gene Type
      if (!rowData[2].includes('V')) {
        details += '<strong>5 Heptamer:</strong> ' + rowData[9] + '<br>' +
                   '<strong>5 Nonamer:</strong> ' + rowData[10] + '<br>' +
                   '<strong>Spacer 5:</strong> ' + rowData[12] + '<br>';
      }
      if (!rowData[2].includes('J')) {
        details += '<strong>3 Heptamer:</strong> ' + rowData[7] + '<br>' +
                   '<strong>3 Nonamer:</strong> ' + rowData[8] + '<br>' +
                   '<strong>Spacer 3:</strong> ' + rowData[11] + '<br>';
      }
      
      // Add l_part1 and l_part2 only if rowData[2] contains 'V'
      if (rowData[2].includes('V')) {
        details += '<strong>l_part1:</strong> ' + rowData[19] + '<br>' +
                   '<strong>l_part2:</strong> ' + rowData[20] + '<br>';
      }

          details +='<strong>Sample Count Genomic:</strong> ' + rowData[13] + '<br>' +
          '<strong>Sample Count AIRRseq:</strong> ' + rowData[14] + '<br>' +
          '<strong>More Details about this ASC:</strong> <a href=\"' + rowData[3] + '.html\" target=\"_blank\">Click here</a>' + // Dynamic hyperlink


          '</td></tr>';
        
        // Insert the details row below the clicked row
        tr.after(details);
      }
    });
    "
  )
)
```